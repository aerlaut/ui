name: Build
on:
  push:
    branches:
    - master
jobs:
  build:
    name: Build website
    runs-on: ubuntu-latest
    env:
      CI: "true"
    steps:
    - id: checkout
      name: Check out source code
      uses: actions/checkout@v2

    - id: cache-seek
      name: Check for npm cache hit
      uses: c-hive/gha-npm-cache@v1

    - id: install
      name: Install dependencies
      run: |-
        npm ci

    # - id: test
    #   name: Run unit tests
    #   run: |-
    #     npm test

    - id: next-cache-seek
      name: Look up the Next.js build cache
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
  
    - id: build
      name: Build project
      run: |-
        npm run build
  
    - id: upload-build-out
      name: Upload Next.js build output
      uses: actions/upload-artifact@v2
      with:
        name: next-build-out
        path: |
          .next/
          !.next/cache

  build-docker:
    name: Build Docker container
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: checkout
        name: Check out source code
        uses: actions/checkout@v2
  
      - id: download-build-out
        name: Download Next.js build output
        uses: actions/download-artifact@v2
        with:
          name: next-build-out
  
      - id: ref
        name: Replace / to - in ref name for docker tag.
        run: |-
          TAG_REF=$(echo $GITHUB_REF | sed 's/\//-/g')
          echo "::set-output name=tag-ref::$TAG_REF"

      - id: remove-cache
        name: Remove .next/cache directory
        run: |-
          rm -rf .next/cache/

      - id: set-up-creds
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - id: login-ecr
        name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - id: build
        name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ format('{0}:{1},{0}:{2}', github.repository, steps.ref.outputs.tag-ref, github.sha) }}
      
      - id: check-size
        name: Check size
        run: |-
          docker images